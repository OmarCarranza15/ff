Aquí está el código específico para solucionar los dos errores mencionados:

1. **Error 1: Mostrar nombres de checkbox en el modal**  
   Para que aparezca "Permisos" antes de los checkboxes en el modal, modifica el contenido del modal añadiendo un título y los nombres de los checkboxes.

   **Código actualizado del modal:**
   ```jsx
   {/* Modal para insertar una nueva aplicacion */}
   {showModal && (
     <ModalBackground>
       <ModalWrapper>
         <ModalTitle>Nuevo Rol de Usuario</ModalTitle>

         <ModalInput
           type="text"
           value={modalValues.N_Rol}
           onChange={(e) => handleModalChange(e, "N_Rol")}
           placeholder="Roles"
           error={errors.rolusuario}
           required
         />
         {errors.rolusuario && <ErrorMessage>{errors.rolusuario}</ErrorMessage>}
         
         <ModalInput
           type="text"
           value={modalValues.Des_Rol}
           onChange={(e) => handleModalChange(e, "Des_Rol")}
           placeholder="Descripción del Rol"
         />

         <Select
           isMulti
           value={modalValues.Paises.map((id) => ({
             value: id,
             label: pais.find((a) => a.id === id)?.N_Pais,
           }))}
           options={pais.map((a) => ({
             value: a.id,
             label: a.N_Pais,
           }))}
           onChange={(selectedOptions) => {
             const selectedValues = selectedOptions.map(option => option.value);
             setModalValues((prevValues) => ({
               ...prevValues,
               Paises: selectedValues,
             }));
           }}
           placeholder="Selecciona Paises"
         />
         {errors.pais && <ErrorMessage>{errors.pais}</ErrorMessage>}

         <div>
           <ModalLabel>Permisos</ModalLabel>
           <ModalCheckbox
             type="checkbox"
             checked={modalValues.Insertar}
             onChange={(e) => handleModalChange(e, "Insertar")}
           />
           <ModalLabel>Permitir Insertar</ModalLabel>
           <ModalCheckbox
             type="checkbox"
             checked={modalValues.Editar}
             onChange={(e) => handleModalChange(e, "Editar")}
           />
           <ModalLabel>Permitir Editar</ModalLabel>
         </div>

         <ModalButtonGroup>
           <GuardarButton onClick={SaveModal}>
             <FaSave /> Guardar
           </GuardarButton>
           <ModalButton cancel onClick={handleCloseModal}>
             <FaTimes /> Cancelar
           </ModalButton>
         </ModalButtonGroup>
       </ModalWrapper>
     </ModalBackground>
   )}
   ```

   **Código CSS para el nuevo estilo:**
   ```css
   /* Agregar estos estilos en tu archivo CSS */
   .modal-label {
     margin-right: 10px;
   }
   ```

2. **Error 2: Pantalla en blanco después de cancelar**  
   Para evitar que la pantalla se quede en blanco después de cancelar, asegúrate de que el estado `showModal` se restablezca correctamente al cerrar el modal. Esto puede implicar que también debes asegurarte de que el estado `modalValues` se restablezca adecuadamente.

   **Código actualizado de `handleCloseModal`:**
   ```jsx
   const handleCloseModal = () => {
     setShowModal(false);
     setModalValues({
       Paises: [],
       N_Rol: "",
       Des_Rol: "",
       Insertar: false,
       Editar: false,
     });
     setErrors({ pais: "", rolusuario: "" });
   };
   ```

Estos cambios deberían resolver los problemas descritos.
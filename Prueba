const saveChanges = async (id) => {
  try {
    // Obtener el registro original para comparar
    const originalResponse = await axios.get(`http://localhost:3000/perfil/${id}`);
    const originalRow = originalResponse.data;

    // Preparar los datos para actualizar
    const updateRow = {
      ...editedRow,
      Estado_Perfil: editedRow.Estado_Perfil === "En Servicio" ? 1 : 2,
    };

    // Realizar las actualizaciones necesarias
    await axios.put(`http://localhost:3000/perfil/${id}`, updateRow);

    if (editedRow.ID_Ambiente !== originalRow.ID_Ambiente) {
      await axios.put(`http://localhost:3000/aplicacion/${editedRow.ID_Aplicaciones}`, {
        ID_Ambiente: editedRow.ID_Ambiente,
      });
    }

    if (editedRow.ID_RSocial !== originalRow.ID_RSocial) {
      await axios.put(`http://localhost:3000/puesto/${editedRow.ID_Puesto}`, {
        ID_RSocial: editedRow.ID_RSocial,
      });
    }

    if (editedRow.ID_Division !== originalRow.ID_Division) {
      await axios.put(`http://localhost:3000/puesto/${editedRow.ID_Puesto}`, {
        ID_Division: editedRow.ID_Division,
      });
    }

    if (editedRow.ID_Departamento !== originalRow.ID_Departamento) {
      await axios.put(`http://localhost:3000/puesto/${editedRow.ID_Puesto}`, {
        ID_Departamento: editedRow.ID_Departamento,
      });
    }

    if (editedRow.ID_CentroCostos !== originalRow.ID_CentroCostos) {
      await axios.put(`http://localhost:3000/puesto/${editedRow.ID_Puesto}`, {
        ID_CentroCostos: editedRow.ID_CentroCostos,
      });
    }

    // Actualizar la lista de registros
    const updatedRecords = records.map((row) =>
      row.id === id ? { ...editedRow } : row
    );
    setRecords(updatedRecords);
    setEditedRow(null);
    setEditMode(null);

    // Registrar la auditoría
    await axios.post('http://localhost:3000/auditoria', {
      idPerfil: id,
      campoModificado: 'NombreCampo', // Puedes especificar el campo que se ha modificado
      valorAnterior: originalRow.NombreCampo, // Campo específico en el registro original
      valorNuevo: editedRow.NombreCampo, // Campo específico en el registro editado
      fecha: new Date().toISOString()
    });

    console.log("Cambios guardados correctamente y auditados");
    window.location.reload();
  } catch (error) {
    console.error("Error al guardar los cambios", error);
  }
};
Claro, aquí están las partes específicas del código que debes cambiar:

### 1. **Función `startEdit`**
Actualiza la función `startEdit` para que configure correctamente los valores de `Insertar` y `Editar` al entrar en modo de edición:
```javascript
const startEdit = (row) => {
  const paisIds = row.Paises.map((nombre) => {
    const paisObj = pais.find((a) => a.N_Pais === nombre);
    return paisObj ? paisObj.id : null;
  }).filter((id) => id !== null);

  setEditedRow({ 
    ...row, 
    Paises: paisIds,
    Insertar: row.Insertar === 1,
    Editar: row.Editar === 1
  });
  setEditMode(row.id);
};
```

### 2. **Columnas para `Insertar` y `Editar`**
Asegúrate de que las columnas de `Insertar` y `Editar` utilizan `CustomCheckbox` y manejan correctamente los estados:
```javascript
{
  name: "Insertar",
  selector: (row) => (row.Insertar === 1 ? "Activo" : "Inactivo"),
  cell: (row) =>
    editMode && editedRow?.id === row.id ? (
      <CustomCheckbox
        checked={editedRow.Insertar}
        onChange={(e) => handleEditChange(e, "Insertar")}
      />
    ) : (
      <div>{row.Insertar === 1 ? "Activo" : "Inactivo"}</div>
    ),
},
{
  name: "Editar",
  selector: (row) => (row.Editar === 1 ? "Activo" : "Inactivo"),
  cell: (row) =>
    editMode && editedRow?.id === row.id ? (
      <CustomCheckbox
        checked={editedRow.Editar}
        onChange={(e) => handleEditChange(e, "Editar")}
      />
    ) : (
      <div>{row.Editar === 1 ? "Activo" : "Inactivo"}</div>
    ),
}
```

### 3. **Guardar Cambios**
Actualiza `saveChanges` para convertir los valores de `Insertar` y `Editar` a números antes de guardarlos:
```javascript
const saveChanges = async (id) => {
  try {
    const updateRow = {
      ...editedRow,
      Insertar: editedRow.Insertar ? 1 : 2,
      Editar: editedRow.Editar ? 1 : 2,
      Paises: editedRow.Paises.join(", "),
    };

    await axios.put(`http://localhost:3000/rolusuario/${id}`, updateRow);

    const updatedRecords = records.map((row) =>
      row.id === id ? { ...updateRow } : row
    );

    setRecords(updatedRecords);
    setEditedRow(null);
    setEditMode(null);

    console.log("Cambios guardados correctamente");
    window.location.reload();
  } catch (error) {
    console.error("Error al guardar los cambios", error);
  }
};
```

Estas son las partes específicas del código que necesitas actualizar para que los checkboxes de `Insertar` y `Editar` reflejen correctamente el estado actual al entrar en modo de edición.
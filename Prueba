import { useState } from "react";
import React from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import '../styles/login.css'

const Login = () => {
    const navigate = useNavigate();
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [newPassword, setNewPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState('');
    const [isNewUser, setIsNewUser] = useState(false);

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            // Hacer una solicitud para obtener el usuario por su nombre de Usuario
            const response = await axios.get(`http://localhost:3000/usuarios/?Usuario=${username}`);

            // Verificar si se encontró un usuario y si la contraseña coincide
            const user = response.data.find(user => user.Usuario === username && user.Contrasenia === password);

            if (user) {
                if (user.Estado === 1) {
                    // Si el usuario es nuevo, mostrar los campos para nueva contraseña
                    setIsNewUser(true);
                } else {
                    // Usuario no es nuevo, proceder al login normal
                    localStorage.setItem('username', user.Nombre);
                    navigate('/landingPage');
                }
            } else {
                setError('Usuario o contraseña incorrectos');
            }
        } catch (error) {
            console.error('Error al intentar iniciar sesión', error);
            setError('Usuario o contraseña incorrectos');
        }
    }

    const handlePasswordChange = async (e) => {
        e.preventDefault();
        if (newPassword !== confirmPassword) {
            setError('Las contraseñas no coinciden');
            return;
        }
        try {
            // Actualizar la contraseña y el estado del usuario
            await axios.put(`http://localhost:3000/usuarios/${username}`, {
                Contrasenia: newPassword,
                Estado: 2
            });
            localStorage.setItem('username', username);
            navigate('/landingPage');
        } catch (error) {
            console.error('Error al intentar cambiar la contraseña', error);
            setError('Error al intentar cambiar la contraseña');
        }
    }

    return (
        <div className="login-container">
            <form onSubmit={isNewUser ? handlePasswordChange : handleSubmit} className="login-form">
                <h2 className="in-group">Inicio de Sesion</h2>
                <label>Ingrese su Usuario de Red y Contraseña</label>
                <br/>
                <br/>
                <div className="form-group">
                    <label>Usuario:</label>
                    <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} className="form-control" required/>
                </div>
                <div className="form-group">
                    <label>Contraseña:</label>
                    <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} className="form-control" required/>
                </div>
                {isNewUser && (
                    <>
                        <div className="form-group">
                            <label>Nueva Contraseña:</label>
                            <input type="password" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} className="form-control" required/>
                        </div>
                        <div className="form-group">
                            <label>Confirmar Contraseña:</label>
                            <input type="password" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} className="form-control" required/>
                        </div>
                    </>
                )}
                <button type="submit" className="btn btn-primary">Iniciar Sesion</button>
                <br/>
                {error && <p style={{color: 'red'}}>{error}</p>}
                <div className="form-floating mb-3 mt-3">
                    <a href="/Solicitud" style={{textDecoration: 'none'}}><span className="form-con">He olvidado mi contraseña</span></a>
                </div>
                <br/>
            </form>
        </div>
    );
};

export default Login;
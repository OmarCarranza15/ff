En el código del `Login`, parece que estás encriptando el nombre de usuario usando `CryptoJS.AES.encrypt` y almacenándolo en `sessionStorage`. Si el nombre de usuario se almacena correctamente en `sessionStorage` pero se muestra con comillas en el `TopBar`, probablemente se deba a cómo se está manejando el valor en el `TopBar`.

A continuación, realizaré algunos ajustes para asegurarnos de que el nombre de usuario se maneje correctamente tanto en el `Login` como en el `TopBar`:

### Ajustes en `Login.jsx`

Asegúrate de que el nombre de usuario se encripte correctamente y que no haya comillas adicionales en el momento de guardar el nombre en `sessionStorage`. Puedes agregar un `console.log` para verificar cómo se almacena.

```js
const handleSubmit = async (e) => {
    e.preventDefault();
    try {
        const response = await axios.get(`http://localhost:3000/usuarios/?Usuario=${username}`);
        const user = response.data.find(user => user.Usuario === username && user.Contrasenia === password);

        if (user) {
            setUserId(user.id);
            setUserName(user.Nombre);
            setUserRole(user.ID_RolUsuario);

            const roleResponse = await axios.get(`http://localhost:3000/rolusuario/${user.ID_RolUsuario}`);
            const roleData = roleResponse.data;

            setUserPermissions({
                insert: roleData.Insertar === 1,
                edit: roleData.Editar === 1
            });

            setUserCountries(roleData.Paises.split(',').map(paisId => parseInt(paisId, 10)));

            if (user.Estado === 1) {
                setIsNewUser(true);
            } else if (user.Estado === 3) {
                setError('Este usuario ha expirado');
            } else {
                const encryptedUsername = encryptData(user.Nombre);
                console.log('Encrypted Username:', encryptedUsername); // Verifica el valor encriptado
                sessionStorage.setItem('userId', encryptData(user.id));
                sessionStorage.setItem('username', encryptedUsername);
                sessionStorage.setItem('userRole', encryptData(user.ID_RolUsuario));
                sessionStorage.setItem('userPermissions', encryptData({
                    insert: roleData.Insertar === 1,
                    edit: roleData.Editar === 1
                }));
                sessionStorage.setItem('userCountries', encryptData(userCountries));
                navigate('/landingPage');
            }
        } else {
            setError('Usuario o contraseña incorrectos');
        }
    } catch (error) {
        console.error('Error al intentar iniciar sesión', error);
        setError('Usuario o contraseña incorrectos');
    }
};
```

### Ajustes en `TopBar.jsx`

Desencripta el nombre del usuario y asegúrate de que no tenga comillas adicionales. Verifica el valor desencriptado con un `console.log`.

```js
import React, { useEffect, useState } from "react";
import { FaUser } from "react-icons/fa"; // Importamos el icono FaUser de FontAwesome
import "../styles/TopBar.css"; // Ajusta la ruta de los estilos según sea necesario
import logo from "../imgs/OIP.jfif";
import styled from "styled-components";
import CryptoJS from "crypto-js";

const Image = styled.img`
  width: 100%;
  height: auto;
`;

const secretKey = 'mySecretKey'; // Clave secreta para desencriptar datos

const decryptData = (encryptedData) => {
  const bytes = CryptoJS.AES.decrypt(encryptedData, secretKey);
  return bytes.toString(CryptoJS.enc.Utf8).trim(); // Asegúrate de eliminar espacios en blanco
};

const TopBar = ({ userName }) => {
  const [username, setUsername] = useState('');

  useEffect(() => {
    const storedUsername = sessionStorage.getItem('username');
    if (storedUsername) {
      const decryptedUsername = decryptData(storedUsername); // Desencriptar nombre de usuario
      setUsername(decryptedUsername);
      console.log("Decrypted Username:", decryptedUsername); // Verifica el valor desencriptado
    }
  }, []);

  return (
    <div className="top-bar">
      <div className="nav">
        <a href="/landingPage" style={{ textDecoration: 'none' }}>
          <Image src={logo} />
        </a>
      </div>
      <div className="nav-brand">
        <a href="/landingPage" style={{ textDecoration: 'none' }}>
          <h2 className="icon">Ficohsa</h2>
        </a>
      </div>
      <div className="top-bar-right">
        <FaUser className="user-icon" />
        <p className="user-name">{username}</p>
      </div>
    </div>
  );
};

export default TopBar;
```

### Verificación

- **Encriptación y Almacenamiento:** Usa `console.log` en `Login` para confirmar que el nombre de usuario se encripta correctamente y no contiene comillas adicionales.

- **Desencriptación y Renderizado:** Verifica en `TopBar` que el valor desencriptado no contenga comillas adicionales.

Estos pasos deberían ayudarte a identificar y solucionar el problema con las comillas alrededor del nombre de usuario.
Parece que el problema es que los IDs de ambiente se están mostrando en lugar de los nombres. Para solucionar esto, debes asegurarte de que cuando se edita un registro, los nombres de los ambientes se muestren correctamente en el modal y en la tabla. Aquí está el código modificado para el componente `Aplicacion`:

1. **Modificación en `startEdit`:** Asegúrate de convertir los nombres de los ambientes a sus IDs para que se muestren correctamente al editar.

2. **Modificación en `handleEditChange`:** Asegúrate de actualizar los nombres de los ambientes correctamente cuando se editan.

Aquí está el código modificado:

```javascript
const startEdit = (row) => {
  const ambienteIds = row.Ambientes.map((nombre) => {
    const ambienteObj = ambiente.find((a) => a.N_Ambiente === nombre);
    return ambienteObj ? ambienteObj.id : null;
  }).filter((id) => id !== null);
  
  setEditedRow({ ...row, Ambientes: ambienteIds });
  setEditMode(row.id);
};

const handleEditChange = (event, field) => {
  if (field === "Ambientes") {
    const selectedOptions = Array.from(event.target.selectedOptions, option => option.value);
    setEditedRow((prevState) => ({
      ...prevState,
      Ambientes: selectedOptions,
    }));
  } else {
    const { value } = event.target;
    setEditedRow((prevState) => ({
      ...prevState,
      [field]: value,
      ...(field === "ID_Pais" && {
        N_Pais: pais.find((p) => p.id === parseInt(value)).N_Pais,
      }),
    }));
    validateInput(field, value);
  }
};

// En el componente de la tabla
{
  name: "Ambientes",
  selector: (row) => row.Ambientes.join(", "),
  sortable: true,
  minWidth: "330px",
  maxWidth: "50px",
  cell: (row) =>
    editMode && editedRow?.id === row.id ? (
      <Select
        isMulti
        value={editedRow.Ambientes.map((id) => ({
          value: id,
          label: ambiente.find((a) => a.id === id)?.N_Ambiente,
        }))}
        options={ambiente.map((a) => ({
          value: a.id,
          label: a.N_Ambiente,
        }))}
        onChange={(selectedOptions) => {
          const selectedValues = selectedOptions.map(option => option.value);
          setEditedRow((prevState) => ({
            ...prevState,
            Ambientes: selectedValues,
          }));
        }}
      />
    ) : (
      <div>{row.Ambientes.join(', ')}</div>
    )
}
```

Estas modificaciones aseguran que los nombres de los ambientes se muestren correctamente durante la edición y se actualicen correctamente al guardar los cambios.
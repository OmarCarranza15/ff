Para agregar una validación que asegure que el campo `Cod_Menu` sea obligatorio cuando se seleccione T24, puedes usar el siguiente enfoque:

1. **Agregar Validación en el Formulario**:
   - Puedes utilizar un estado para controlar los errores específicos de validación del campo `Cod_Menu` y actualizar este estado en función de si `T24` está seleccionado.

2. **Mostrar Mensaje de Error**:
   - Muestra un mensaje de error si el campo `Cod_Menu` está vacío cuando `T24` está seleccionado.

Aquí está el código actualizado para incluir esta validación:

### Código Modificado

1. **Agregar Estado para Errores de Validación**:
   Añade un estado para manejar el error de validación de `Cod_Menu`.

```javascript
const [errors, setErrors] = useState({
  puesto: "",
  aplicacion: "",
  Cod_Menu: "",
  Rol: "",
  Puesto_Jefe: "",
  Ticket: "",
  Observaciones: "",
  PerError: ""
});
```

2. **Actualizar la Función `handleModalChange`**:
   Actualiza la función `handleModalChange` para validar `Cod_Menu` cuando `T24` está seleccionado.

```javascript
const handleModalChange = (e, fieldName) => {
  const value = e.target.value;

  // Actualizar el valor del campo en modalValues
  setModalValues((prevModalValues) => ({
    ...prevModalValues,
    [fieldName]: value,
  }));

  // Si el campo que cambia es ID_Aplicaciones
  if (fieldName === 'ID_Aplicaciones') {
    // Encontrar la aplicación seleccionada en la lista de aplicaciones
    const selectedApplication = aplicacion.find(
      (app) => app.id === parseInt(value)
    ); // Asegúrate de convertir a entero si es necesario

    // Verificar si la aplicación seleccionada es T24
    const isT24 = selectedApplication
      ? selectedApplication.N_Aplicaciones === "T24"
      : false;

    // Actualizar el estado T24
    setT24(isT24);
    
    // Si T24 está seleccionado, asegurarse de que Cod_Menu tenga un valor
    if (isT24 && !modalValues.Cod_Menu) {
      setErrors((prevErrors) => ({
        ...prevErrors,
        Cod_Menu: "El número de menú es obligatorio cuando T24 está seleccionado.",
      }));
    } else {
      setErrors((prevErrors) => ({
        ...prevErrors,
        Cod_Menu: "",
      }));
    }
  } else if (fieldName === 'Cod_Menu' && T24) {
    // Validar Cod_Menu cuando T24 está seleccionado
    if (!value) {
      setErrors((prevErrors) => ({
        ...prevErrors,
        Cod_Menu: "El número de menú es obligatorio cuando T24 está seleccionado.",
      }));
    } else {
      setErrors((prevErrors) => ({
        ...prevErrors,
        Cod_Menu: "",
      }));
    }
  }
};
```

3. **Validación en el Guardado del Modal**:
   Asegúrate de que la validación de `Cod_Menu` se ejecute antes de guardar el formulario.

```javascript
const SaveModal = () => {
  let valid = true;

  // Verificar si Cod_Menu es obligatorio y está vacío
  if (T24 && !modalValues.Cod_Menu) {
    setErrors((prevErrors) => ({
      ...prevErrors,
      Cod_Menu: "El número de menú es obligatorio cuando T24 está seleccionado.",
    }));
    valid = false;
  }

  // Otros controles de validación...

  if (valid) {
    // Lógica para guardar los datos
    // ...
  }
};
```

4. **Mostrar Mensaje de Error en el Modal**:
   Asegúrate de que el mensaje de error se muestre si `Cod_Menu` no está completo.

```jsx
{T24 && (
  <div>
    <label
      style={{
        width: "100%",
        display: "block",
        textAlign: "left",
      }}
    >
      Número de Menú:
    </label>
    <input
      className={`form-control ${errors.Cod_Menu ? "is-invalid" : ""}`}
      type="text"
      value={modalValues.Cod_Menu}
      onChange={(e) => handleModalChange(e, "Cod_Menu")}
      placeholder="Ingrese el número de menú"
      required
    />
    {errors.Cod_Menu && <ErrorMessage>{errors.Cod_Menu}</ErrorMessage>}
  </div>
)}
```

### Explicación

- **Estado de Errores**: Mantén un estado para gestionar los errores y mostrar mensajes de error según sea necesario.
- **Validación Dinámica**: La validación de `Cod_Menu` se activa solo cuando `T24` está seleccionado, y el mensaje de error se actualiza en consecuencia.
- **Mensajes de Error**: Los mensajes de error se muestran bajo el campo correspondiente si hay un problema con la entrada.

Este enfoque debería ayudarte a garantizar que el campo `Cod_Menu` sea obligatorio solo cuando se selecciona T24, y a mostrar un mensaje de error si el campo no se completa.
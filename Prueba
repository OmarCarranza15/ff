import React, { useState } from 'react';

// Suponiendo que estos estados están definidos en tu componente
const [selectedCountry, setSelectedCountry] = useState(null);
const [editedRow, setEditedRow] = useState(null);
const [filteredRsocial, setFilteredRsocial] = useState([]);
const [filteredDivision, setFilteredDivision] = useState([]);
const [filteredDepartamento, setFilteredDepartamento] = useState([]);
const [filteredCentroCosto, setFilteredCentroCosto] = useState([]);

const startEdit = (row) => {
  setEditedRow({ ...row });
  setEditMode(row.id);

  // Solo filtrar y validar si el país ha cambiado
  if (selectedCountry !== row.ID_Pais) {
    // Filtrar razón social según el país seleccionado
    const filteredRsocial = rsocial.filter(
      (item) => item.ID_Pais === row.ID_Pais
    );
    setFilteredRsocial(filteredRsocial);

    // Filtrar división según el país seleccionado
    const filteredDivision = division.filter(
      (item) => item.ID_Pais === row.ID_Pais
    );
    setFilteredDivision(filteredDivision);

    // Filtrar departamento según el país seleccionado
    const filteredDepartamento = departamento.filter(
      (item) => item.ID_Pais === row.ID_Pais
    );
    setFilteredDepartamento(filteredDepartamento);

    // Filtrar centro de costos según el país seleccionado
    const filteredCentroCosto = centrocosto.filter(
      (item) => item.ID_Pais === row.ID_Pais
    );
    setFilteredCentroCosto(filteredCentroCosto);

    // Actualizar el país seleccionado
    setSelectedCountry(row.ID_Pais);

    // Validar si se han seleccionado todos los campos requeridos
    if (!row.ID_Division || !row.ID_RSocial || !row.ID_Departamento || !row.ID_CentroCostos) {
      alert("Por favor, asegúrese de seleccionar División, Razón Social, Departamento y Centro de Costos.");
    }
  }
};
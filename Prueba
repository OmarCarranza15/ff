import React, { useState, useEffect } from "react";
import {
  GrTable,
  GrSystem,
  GrUserSettings,
  GrGroup,
  GrGlobe,
  GrBusinessService,
  GrContactInfo,
  GrMonitor,
  GrOrganization,
  GrShieldSecurity,
  GrMultiple,
  GrFolder,
  GrSearch,
  GrDocumentDownload,
} from "react-icons/gr";
import { LiaUserTieSolid } from "react-icons/lia";
import styled from "styled-components";
import "../styles/SideNavBar.css";
import axios from "axios";

const Banderas = styled.img`
  width: 20px;
  height: 20px;
`;

const SideNavBar = () => {
  const [isExpanded, setExpandState] = useState(false);
  const [activeMenu, setActiveMenu] = useState(null);
  const [paises, setPaises] = useState([]);
  const userRole = localStorage.getItem('userRole');

  useEffect(() => {
    const fetchPaises = async () => {
      try {
        const response = await axios.get(`http://localhost:3000/pais/`);
        setPaises(response.data);
      } catch (error) {
        console.error("Error al obtener la lista de paises", error);
      }
    };
    fetchPaises();
  }, []);

  const menuItems = [
    {
      title: "Matriz de Perfiles",
      icon: <GrTable />,
      subNav: [
        {
          title: "Reportes",
          path: "/reportes",
          icon: <GrDocumentDownload />,
        },
      ].concat(
        paises.map((pais) => ({
          title: pais.N_Pais,
          icon: <Banderas src={require(`../imgs/${pais.N_Pais}.png`)} alt="Flag image" />,
          path: `/matrizPais?pais=${encodeURIComponent(pais.id)}&Nombre=${pais.N_Pais}`,
        }))
      ),
    },
    {
      title: "Estructura",
      icon: <GrGroup />,
      subNav: [
        {
          title: "Paises",
          path: "/paises",
          icon: <GrGlobe />,
        },
        {
          title: "División",
          path: "/division",
          icon: <GrBusinessService />,
        },
        {
          title: "Razón Social",
          path: "/razonsocial",
          icon: <GrOrganization />,
        },
        {
          title: "Departamentos",
          path: "/departamento",
          icon: <GrFolder />,
        },
        {
          title: "Aplicaciones",
          path: "/aplicacion",
          icon: <GrMonitor />,
        },
        {
          title: "Ambientes",
          path: "/ambiente",
          icon: <GrMultiple />,
        },
        {
          title: "Centro Costos",
          path: "/centrocostos",
          icon: <GrContactInfo />,
        },
      ],
    },
    {
      title: "Perfiles de usuario",
      path: "/perfilesusuario",
      icon: <LiaUserTieSolid />,
    },
    {
      title: "Administración",
      icon: <GrUserSettings />,
      subNav: [
        {
          title: "Usuarios",
          path: "/usuarios",
          icon: <GrShieldSecurity />,
        },
        {
          title: "Roles",
          path: "/roles",
          icon: <GrSystem />,
        },
        {
          title: "Permisos",
          path: "/permisos",
          icon: <GrSearch />,
        },
      ],
    },
  ];

  const toggleMenu = (index) => {
    setActiveMenu(activeMenu === index ? null : index);
  };

  const menuItemVisibility = (title) => {
    if (userRole === 'Admin') return true;
    if (title === 'Administración') return userRole === 'Admin';
    return true; // Mostrar todos los demás menús
  };

  return (
    <div
      className={isExpanded ? "side-nav-container" : "side-nav-container side-nav-container-NX"}
    >
      <div className="nav-upper">
        <div className="nav-heading">
          {isExpanded && (
            <div className="nav-brand">
              <img src={require("../imgs/logoficohsa.jpg")} alt="Logo" />
            </div>
          )}
          <button
            className={isExpanded ? "hamburger hamburger-in" : "hamburger hamburger-out"}
            onClick={() => setExpandState(!isExpanded)}
          >
            <span />
            <span />
            <span />
          </button>
        </div>

        <div className="nav-menu">
          {menuItems.map((menuItem, index) => (
            menuItemVisibility(menuItem.title) && (
              <div key={index}>
                <button
                  className={activeMenu === index ? "menu-item active" : "menu-item"}
                  onClick={() => toggleMenu(index)}
                >
                  <div className="menu-icon">{menuItem.icon}</div>
                  {isExpanded && <span>{menuItem.title}</span>}
                </button>
                {menuItem.subNav && activeMenu === index && (
                  <div className="sub-menu">
                    {menuItem.subNav.map((subMenuItem, subIndex) => (
                      <a key={subIndex} href={subMenuItem.path} className="sub-menu-item">
                        <div className="menu-icon">{subMenuItem.icon}</div>
                        <span>{subMenuItem.title}</span>
                      </a>
                    ))}
                  </div>
                )}
              </div>
            )
          ))}
        </div>
      </div>
      <div className="nav-footer">
        {isExpanded && (
          <div className="nav-details">
            <span>{localStorage.getItem('username')}</span>
          </div>
        )}
      </div>
    </div>
  );
};

export default SideNavBar;
if (user) {
    setUserId(user.id);
    setUserName(user.Nombre);
    setUserRole(user.ID_RolUsuario);

    // Obtener permisos y países del rol del usuario
    const token = 'YOUR_AUTH_TOKEN'; // Aquí deberías obtener el token generado por el backend
    const roleResponse = await axios.get(`http://localhost:3000/rolusuario/${user.ID_RolUsuario}`, {
        headers: { Authorization: `Bearer ${token}` }
    });
    const roleData = roleResponse.data;

    // Guardar permisos
    setUserPermissions({
        insert: roleData.Insertar === 1,
        edit: roleData.Editar === 1
    });

    // Guardar países
    setUserCountries(roleData.Paises.split(',').map(paisId => parseInt(paisId, 10)));

    if (user.Estado === 1) {
        setIsNewUser(true);
    } else if (user.Estado === 3) {
        setError('Este usuario ha expirado');
    } else {
        // Guardar datos en tokens de autenticación
        localStorage.setItem('authToken', token); // Guardar token de autenticación
        localStorage.setItem('userId', user.id); // Guardar ID del usuario
        localStorage.setItem('username', user.Nombre);
        localStorage.setItem('userRole', user.ID_RolUsuario);
        localStorage.setItem('userPermissions', JSON.stringify({
            insert: roleData.Insertar === 1,
            edit: roleData.Editar === 1
        }));
        localStorage.setItem('userCountries', JSON.stringify(userCountries));
        navigate('/landingPage');
    }
} else {
    setError('Usuario o contraseña incorrectos');
}
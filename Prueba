Para manejar los espacios en blanco al principio y al final de la cadena en el modo de edición y asegurarte de que se eliminen antes de hacer las verificaciones de existencia, debes ajustar la lógica de la función `saveChanges` para recortar los espacios en blanco de los valores editados. Aquí está el código modificado para hacerlo:

1. Modifica la función `saveChanges` para recortar los espacios en blanco del campo `N_Pais`:

```javascript
const saveChanges = async (id) => {
  // Recortar espacios en blanco al principio y al final
  const trimmedPais = editedRow.N_Pais.trim();

  if (!trimmedPais) {
    setErrors({ N_Pais: "El campo País no puede estar vacío" });
    showNotification("El campo País no puede estar vacío");
    return;
  }
  try {
    const updateRow = {
      ...editedRow,
      N_Pais: trimmedPais,
    };

    const response = await axios.get(`http://localhost:3000/pais?N_Pais=${trimmedPais}`);

    if (response.data.some(pais => pais.N_Pais.toLowerCase() === trimmedPais.toLowerCase())) {
      const errorNotification = document.createElement("div");
      errorNotification.className = "error-notification";
      errorNotification.innerHTML = `
        <span class="error-icon">!</span>
        <span class="error-message">
          El País que intenta actualizar ya existe en la base de datos.
          Por favor, ingrese una país diferente.
        </span>
      `;
      document.body.appendChild(errorNotification);

      setTimeout(() => {
        errorNotification.remove();
      }, 2000);
      return;
    }

    const existingCountry = records.find(row => row.N_Pais.toLowerCase() === trimmedPais.toLowerCase());

    if (existingCountry && existingCountry.id !== id) {
      setErrors({ N_Pais: "El país ya está registrado" });
      return;
    }

    const originalRow = records.find(row => row.id === id);

    await axios.put(`http://localhost:3000/pais/${id}`, updateRow);

    const editedIndex = records.findIndex(row => row.id === id) + 1;

    const auditoriaData = {
      Campo_Original: `- País: ${originalRow.N_Pais}`,
      Campo_Nuevo: `- País: ${trimmedPais}`,
      Tabla: 'Paises',
      Accion: 2,
      ID_Usuario: userId,
      N: editedIndex
    };

    await axios.post('http://localhost:3000/auditoria', auditoriaData);

    const updatedRecords = records.map(row =>
      row.id === id ? { ...updateRow } : row
    );

    setRecords(updatedRecords);
    setEditedRow(null);
    setEditMode(null);

    const toastElement = document.createElement("div");
    toastElement.className = "toast-notification";
    toastElement.innerHTML = "País actualizado con éxito!";
    document.body.appendChild(toastElement);

    setTimeout(() => {
      toastElement.remove();
      window.location.reload();
    }, 1000);
  } catch (error) {
    console.error("Error al guardar los cambios", error);
  }
};
```

2. Asegúrate de que `handleEditChange` también recorte los espacios en blanco cuando actualice el estado de `editedRow`:

```javascript
const handleEditChange = (event, field) => {
  const { value } = event.target;
  setEditedRow((prevState) => ({
    ...prevState,
    [field]: value.trim(), // Recortar espacios en blanco aquí
    ...(field === "ID_Pais" && {
      N_Pais: pais.find((p) => p.id === parseInt(value)).N_Pais,
    }),
  }));
  validateInput(field, value.trim()); // También recortar aquí
};
```

Con estas modificaciones, los espacios en blanco al principio y al final del campo `N_Pais` se eliminarán antes de realizar cualquier verificación o actualización en la base de datos.
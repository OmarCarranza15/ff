
const handleEditChange = (event, field) => {
  const { value } = event.target;
  setEditedRow((prevState) => {
    const updatedRow = {
      ...prevState,
      [field]: value,
      ...(field === "ID_Aplicaciones" && {
        N_Aplicaciones: aplicacion.find((p) => p.id === parseInt(value)).N_Aplicaciones,
      }),
      ...(field === "ID_Puesto" && {
        N_Puesto: puestos.find((p) => p.id === parseInt(value)).N_Puesto,
      }),
      ...(field === "ID_Ambiente" && {
        N_Ambiente: ambiente.find((p) => p.id === parseInt(value)).N_Ambiente,
      }),
      ...(field === "ID_RSocial" && {
        N_RSocial: rsocial.find((p) => p.id === parseInt(value)).N_RSocial,
      }),
      ...(field === "ID_Division" && {
        N_Division: division.find((p) => p.id === parseInt(value)).N_Division,
      }),
      ...(field === "ID_Departamento" && {
        N_Departamento: departamento.find((p) => p.id === parseInt(value)).N_Departamento,
      }),
      ...(field === "ID_CentroCostos" && {
        Nombre: centrocosto.find((p) => p.id === parseInt(value)).Nombre,
      }),
    };

    // Si la aplicaci√≥n no es T24, borrar el Cod_Menu
    if (field === "ID_Aplicaciones" && updatedRow.N_Aplicaciones !== 'T24') {
      updatedRow.Cod_Menu = "";
    }

    return updatedRow;
  });
  validateInput(field, value);
};
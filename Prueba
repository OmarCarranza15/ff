Tu enfoque parece correcto para manejar los espacios en blanco al principio y al final del texto. Aquí tienes algunas sugerencias y puntos a verificar para asegurar que funcione adecuadamente:

1. **Recorte en la Función `handleEditChange`**:
   En tu función `handleEditChange`, estás recortando el valor antes de actualizar el estado. Esto es bueno para evitar espacios no deseados. Asegúrate de que el campo `field` sea el que esperas para aplicar el recorte.

   ```javascript
   const handleEditChange = (event, field) => {
     const { value } = event.target;
     setEditedRow((prevState) => ({
       ...prevState,
       [field]: value.trim(), // Recortar espacios en blanco aquí
       ...(field === "ID_Pais" && {
         N_Pais: pais.find((p) => p.id === parseInt(value)).N_Pais,
       }),
     }));
     validateInput(field, value.trim()); // También recortar aquí
   };
   ```

2. **Validación en `saveChanges`**:
   En tu función `saveChanges`, ya estás recortando los espacios en blanco del campo `N_Pais` antes de realizar cualquier otra acción. Asegúrate de que el recorte se aplique correctamente en todos los lugares relevantes.

   ```javascript
   const trimmedPais = editedRow.N_Pais.trim();

   if (!trimmedPais) {
     setErrors({ N_Pais: "El campo País no puede estar vacío" });
     showNotification("El campo País no puede estar vacío");
     return;
   }
   ```

3. **Verifica el Código de Notificaciones**:
   La lógica para mostrar y ocultar notificaciones parece adecuada, pero asegúrate de que el estilo CSS para `.error-notification` y `.toast-notification` esté configurado correctamente para que las notificaciones se muestren y oculten como esperas.

4. **Verifica la Lógica de Comparación**:
   En la consulta a la API y en la validación de los registros existentes, estás utilizando `toLowerCase()` para hacer comparaciones sin importar el caso. Esto es útil para asegurar que las comparaciones sean consistentes. Solo asegúrate de que este enfoque sea el que deseas para tu aplicación.

5. **Prueba y Depuración**:
   Realiza pruebas exhaustivas para asegurar que el campo de texto acepte espacios y que el recorte se realice correctamente tanto en el campo de edición como en el momento de guardar los cambios.

Si después de estas comprobaciones sigues teniendo problemas, puede ser útil revisar el código de renderizado del campo de texto para asegurarte de que no haya ningún problema relacionado con el control del campo de entrada en sí.
Para que el componente `SideNavBar` use la información encriptada desde `sessionStorage`, realiza las siguientes modificaciones:

1. **Agregar funciones de desencriptación:**

   Añade estas funciones fuera del componente `SideNavBar`:

   ```js
   const secretKey = 'mySecretKey'; // Clave secreta para desencriptar datos

   const decryptData = (encryptedData) => {
       const bytes = CryptoJS.AES.decrypt(encryptedData, secretKey);
       return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));
   };
   ```

2. **Modificar el `useEffect` para desencriptar datos y obtener países permitidos:**

   Cambia la lógica para leer y desencriptar los datos desde `sessionStorage`:

   ```js
   useEffect(() => {
       const role = decryptData(sessionStorage.getItem('userRole'));
       setUserRole(role);

       const fetchUserRole = async () => {
           try {
               const response = await axios.get(`http://localhost:3000/rolusuario/${role}`);
               const paisesPermitidos = response.data.Paises ? response.data.Paises.split(',').map(id => id.trim()) : [];
               setUserCountries(paisesPermitidos);
               console.log("Países permitidos:", paisesPermitidos);
           } catch (error) {
               console.error("Error al obtener el rol del usuario", error);
           }
       };

       fetchUserRole();

       const fetchPaises = async () => {
           try {
               const response = await axios.get(`http://localhost:3000/pais/`);
               setPaises(response.data);
               console.log("Lista de países:", response.data); // Verifica los países obtenidos
           } catch (error) {
               console.error("Error al obtener la lista de paises", error);
           }
       };
       fetchPaises();
   }, []);
   ```

3. **Modificar la lógica para filtrar países y establecer `menuItems`:**

   Cambia la parte que usa la información desencriptada:

   ```js
   const menuItems = [
       {
           title: "Matriz de Perfiles",
           icon: <GrTable />,
           subNav: [
               {
                   title: "Reportes",
                   path: "/reportes",
                   icon: <GrDocumentDownload />,
               },
           ].concat(
               paises
                   .filter(pais => userCountries.includes(pais.id.toString())) // Filtrar según los países del usuario
                   .map((pais) => ({
                       title: pais.N_Pais,
                       icon: <Banderas src={require(`../imgs/${pais.N_Pais}.png`)} alt="Flag image" />,
                       path: `/matrizPais?pais=${encodeURIComponent(pais.id)}&Nombre=${pais.N_Pais}`,
                   }))
           ),
       },
       {
           title: "Estructura",
           icon: <GrGroup />,
           subNav: [
               {
                   title: "Paises",
                   path: "/paises",
                   icon: <GrGlobe />,
               },
               {
                   title: "División",
                   path: "/division",
                   icon: <GrBusinessService />,
               },
               {
                   title: "Razón Social",
                   path: "/razonsocial",
                   icon: <GrOrganization />,
               },
               {
                   title: "Departamentos",
                   path: "/departamento",
                   icon: <GrFolder />,
               },
               {
                   title: "Aplicaciones",
                   path: "/aplicacion",
                   icon: <GrMonitor />,
               },
               {
                   title: "Ambientes",
                   path: "/ambiente",
                   icon: <GrSystem />,
               },
               {
                   title: "Centro de Costes",
                   path: "/centrocosto",
                   icon: <GrMultiple />,
               },
               {
                   title: "Puestos",
                   path: "/puesto",
                   icon: <LiaUserTieSolid />,
               },
           ],
       },
       {
           title: "Gestión de Usuarios",
           icon: <GrUserSettings />,
           subNav: [
               {
                   title: "Usuarios",
                   path: "/usuario",
                   icon: <GrContactInfo />,
               },
               {
                   title: "Roles y Permisos",
                   path: "/rolespermisos",
                   icon: <GrShieldSecurity />,
               },
               {
                   title: "Auditoría",
                   path: "/auditoria",
                   icon: <GrSearch />,
               },
           ],
       },
   ];
   ```

Estos cambios permiten que `SideNavBar` use los datos encriptados almacenados en `sessionStorage`. Asegúrate de que la clave secreta utilizada para encriptar y desencriptar los datos sea la misma en ambos componentes.
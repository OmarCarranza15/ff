import React from "react";
import styled from "styled-components";

const ModalOverlay = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
`;

const ModalContainer = styled.div`
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  width: 400px;
  max-width: 90%;
  padding: 20px;
  text-align: center;
`;

const ModalTitleTop = styled.h3`
  margin-bottom: 15px;
  font-size: 1.5em;
  color: #333;
`;

const ModalMessage = styled.p`
  margin-bottom: 20px;
  color: #666;
  font-size: 1em;
`;

const ButtonContainer = styled.div`
  display: flex;
  justify-content: center;
  gap: 15px; /* Espacio entre los botones */
`;

const ModalButtonB = styled.button`
  padding: 10px 20px; /* Ajusta el padding para un tamaño adecuado */
  font-size: 14px; /* Ajusta el tamaño del texto */
  border-radius: 5px; /* Bordes redondeados */
  border: 1px solid transparent; /* Borde transparente para mantener el tamaño */
  cursor: pointer; /* Cambia el cursor para indicar que es clickeable */
  transition: background-color 0.3s ease, color 0.3s ease; /* Transición suave para cambios de color */
  min-width: 100px; /* Tamaño mínimo del botón */
  display: flex;
  align-items: center;
  justify-content: center; /* Centra el texto horizontalmente */
  text-align: center; /* Centra el texto */
  white-space: nowrap; /* Evita que el texto se deborde */
  overflow: hidden; /* Oculta el texto que se deborda */
  text-overflow: ellipsis; /* Agrega puntos suspensivos al final del texto si se deborda */

  &:focus {
    outline: none; /* Elimina el borde de enfoque por defecto */
  }

  &.btn-outline-primary {
    background-color: #fff; /* Fondo blanco para el botón de confirmación */
    border-color: #007bff; /* Borde azul */
    color: #007bff; /* Color del texto azul */

    &:hover {
      background-color: #007bff; /* Fondo azul al pasar el mouse */
      color: #fff; /* Color del texto blanco */
    }
  }

  &.btn-outline-danger {
    background-color: #fff; /* Fondo blanco para el botón de cancelar */
    border-color: #dc3545; /* Borde rojo */
    color: #dc3545; /* Color del texto rojo */

    &:hover {
      background-color: #dc3545; /* Fondo rojo al pasar el mouse */
      color: #fff; /* Color del texto blanco */
    }
  }
`;

const CancelButton = styled(ModalButtonB)`
  background-color: #dc3545; /* Rojo */
  color: #ffffff; /* Blanco */
  font-size: 14px; /* Tamaño del texto */
  padding: 10px 20px; /* Tamaño del botón */
  border-radius: 5px;
`;

const Modal = ({ isOpen, onClose, onConfirm }) => {
  if (!isOpen) return null;

  return (
    <ModalOverlay>
      <ModalContainer>
        <ModalTitleTop>Confirmación</ModalTitleTop>
        <ModalMessage>¿Estás seguro de que deseas cerrar sesión? Todos los datos no guardados se perderán.</ModalMessage>
        <ButtonContainer>
          <ModalButtonB className="btn-outline-primary" onClick={onConfirm}>Confirmar</ModalButtonB>
          <CancelButton className="btn-outline-danger" onClick={onClose}>Cancelar</CancelButton>
        </ButtonContainer>
      </ModalContainer>
    </ModalOverlay>
  );
};

export default Modal;
import pandas as pd
from tkinter import Tk, filedialog, simpledialog, messagebox
from tkinter import Button, Label, ttk
from openpyxl import load_workbook
from openpyxl.styles import Alignment, Font

class ExcelApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Aplicación de Importación y Exportación de Excel")
        self.root.geometry("400x300")
        self.root.configure(bg='lightblue')

        self.df = None

        self.title_label = Label(root, text="Aplicación de Excel", font=("Helvetica", 16), bg='lightblue')
        self.title_label.pack(pady=20)

        self.import_button = ttk.Button(root, text="Importar Archivos Excel", command=self.import_files)
        self.import_button.pack(pady=10)

        self.export_button = ttk.Button(root, text="Exportar Excel Resultante", command=self.export_file)
        self.export_button.pack(pady=10)

    def import_files(self):
        file_paths = filedialog.askopenfilenames(filetypes=[("Archivos Excel", "*.xlsx;*.xls")])
        if not file_paths:
            return

        data_frames = []

        for file in file_paths:
            try:
                df = pd.read_excel(file)
                data_frames.append(df)
            except Exception as e:
                messagebox.showerror("Error", f"Error al importar archivo {file}: {e}")
                return

        # Concatenar DataFrames verticalmente con columnas consistentes
        self.df = pd.concat(data_frames, ignore_index=True, sort=False)

        messagebox.showinfo("Éxito", f"Se importaron {len(file_paths)} archivos exitosamente.")

    def export_file(self):
        if self.df is None:
            messagebox.showerror("Error", "No hay datos para exportar. Primero importe los archivos.")
            return

        file_name = simpledialog.askstring("Entrada", "Ingrese el nombre para el archivo de salida (sin extensión):")
        if not file_name:
            return

        file_path = f"{file_name}.xlsx"
        try:
            # Exportar datos a Excel
            self.df.to_excel(file_path, index=False)

            # Aplicar estilos usando openpyxl
            self.apply_styles(file_path)

            messagebox.showinfo("Éxito", f"Archivo exportado como {file_path}.")
        except Exception as e:
            messagebox.showerror("Error", f"Error al exportar el archivo: {e}")

    def apply_styles(self, file_path):
        wb = load_workbook(file_path)
        ws = wb.active

        # Aplicar estilo a la primera fila (títulos)
        for cell in ws[1]:
            cell.font = Font(bold=True)
            cell.alignment = Alignment(horizontal='center')

        # Guardar el archivo con los estilos aplicados
        wb.save(file_path)

if __name__ == "__main__":
    root = Tk()
    app = ExcelApp(root)
    root.mainloop()
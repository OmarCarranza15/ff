import React, { useState } from 'react';

const MyComponent = ({ aplicacion, errors }) => {
  const [modalValues, setModalValues] = useState({});
  const [T24, setT24] = useState(false);

  const handleModalChange = (e, fieldName) => {
    const value = e.target.value;

    if (fieldName === 'ID_Aplicaciones') {
      setModalValues((prevModalValues) => ({
        ...prevModalValues,
        [fieldName]: value,
      }));

      // Encontrar la aplicación seleccionada en la lista de aplicaciones
      const selectedApplication = aplicacion.find(app => app.id === value);

      // Mostrar u ocultar cod_menu basado en el nombre de la aplicación
      if (selectedApplication && selectedApplication.N_Aplicaciones === 'T24') {
        setT24(true);
      } else {
        setT24(false);
      }
    } else {
      setModalValues((prevModalValues) => ({
        ...prevModalValues,
        [fieldName]: value,
      }));
    }
  };

  return (
    <div>
      <Select
        value={modalValues.ID_Aplicaciones || ''}
        onChange={(e) => handleModalChange(e, "ID_Aplicaciones")}
        error={errors.aplicacion}
        required
      >
        <option value="">Seleccione una aplicacion</option>
        {aplicacion.map((p) => (
          <option key={p.id} value={p.id}>
            {p.N_Aplicaciones}
          </option>
        ))}
      </Select>
      {errors.aplicacion && <ErrorMessage>{errors.aplicacion}</ErrorMessage>}
      
      {T24 && (
        <ModalInput
          type="text"
          value={modalValues.Cod_Menu || ''}
          onChange={(e) => handleEditChange(e, "Cod_Menu")}
          placeholder="Codigo del Menu"
          error={errors.Cod_Menu}
          required
        />
      )}
    </div>
  );
};

export default MyComponent;